[{"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\index.js":"1","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\App.js":"2","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\MainHeader\\MainHeader.js":"3","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\Context\\MemoryContext.js":"4","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\CreateMemory\\MemoryForm.js":"5","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\Api\\api.js":"6","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\MemoryCardDesign\\MemoryCard.js":"7","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\index.js":"8","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\App.js":"9","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\MainHeader\\MainHeader.js":"10","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\CreateMemory\\MemoryForm.js":"11","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\Context\\MemoryContext.js":"12","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\Api\\api.js":"13","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\MemoryCardDesign\\MemoryCard.js":"14"},{"size":243,"mtime":1608808432785,"results":"15","hashOfConfig":"16"},{"size":569,"mtime":1609409544356,"results":"17","hashOfConfig":"16"},{"size":266,"mtime":1609409227452,"results":"18","hashOfConfig":"16"},{"size":764,"mtime":1609442623558,"results":"19","hashOfConfig":"16"},{"size":3469,"mtime":1609410718562,"results":"20","hashOfConfig":"16"},{"size":944,"mtime":1609409070366,"results":"21","hashOfConfig":"16"},{"size":1943,"mtime":1609410165313,"results":"22","hashOfConfig":"16"},{"size":243,"mtime":1611162613889,"results":"23","hashOfConfig":"24"},{"size":599,"mtime":1611590775680,"results":"25","hashOfConfig":"24"},{"size":221,"mtime":1611590751821,"results":"26","hashOfConfig":"24"},{"size":2778,"mtime":1611589703929,"results":"27","hashOfConfig":"24"},{"size":1126,"mtime":1611590731530,"results":"28","hashOfConfig":"24"},{"size":683,"mtime":1611590735869,"results":"29","hashOfConfig":"24"},{"size":2076,"mtime":1611590768213,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1p960ei",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12wjw8r",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\index.js",[],["63","64"],"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\App.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\MainHeader\\MainHeader.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\Context\\MemoryContext.js",["65"],"import React, { useState , createContext } from \"react\";\r\nimport axios from 'axios'\r\nimport {deleteListing} from '../Api/api.js'\r\n\r\n\r\nexport const Memory = createContext();\r\n\r\nexport const MemoryProvider = ({ children }) => {\r\n\r\n//Memories Array\r\nconst memoryCollection = []\r\n\r\n//Array state\r\nconst [memories, setQuestions] = useState(memoryCollection);\r\n\r\n//remove a question\r\nconst removeQuestion = async (id) => {\r\n      \r\n  //*DELETE LISTING FROM API  id = idHolder in deleteListing(idHolder)\r\n    deleteListing(id)\r\n        //! DO NOT DELETE\r\n        setQuestions((memories) => memories.filter((q) => q.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Memory.Provider value={{memories,setQuestions,removeQuestion}}>\r\n      {children}\r\n    </Memory.Provider>\r\n  );\r\n};\r\n","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\CreateMemory\\MemoryForm.js",["66","67","68","69","70"],"import React, { useState, useContext } from \"react\";\r\nimport { Memory } from \"../Context/MemoryContext.js\";\r\nimport MemoryCard from \"../MemoryCardDesign/MemoryCard\";\r\nimport \"./MemoryFormStyle.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst MemoryForm = () => {\r\n  //! Beginning of the function\r\n\r\n  const classes = useStyles();\r\n\r\n  const memoryFromContext = useContext(Memory);\r\n\r\n  //** USE FORM *//\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async (thisListGoesToDB) => {\r\n    // console.log(thisListGoesToDB.title)\r\n\r\n    const id = thisListGoesToDB.title;\r\n\r\n    if (\r\n      thisListGoesToDB.img == \"\" ||\r\n      thisListGoesToDB.title == \"\" ||\r\n      thisListGoesToDB.title.date == \"\"\r\n    ) {\r\n      alert(\"Please fill the whole form!\");\r\n      return false;\r\n    } else\r\n      memoryFromContext.setQuestions((memories) => [\r\n        ...memories,\r\n        {\r\n          id: id,\r\n          ...thisListGoesToDB,\r\n        },\r\n      ]);\r\n\r\n    // await   createList(thisListGoesToDB) //* THIS ALSO WORKS\r\n\r\n    //AXIOS PROPER SETTING\r\n    const options = {\r\n      url: \"http://localhost:5001/create-new-memory\",\r\n      method: \"POST\",\r\n      data: thisListGoesToDB,\r\n    };\r\n\r\n    axios(options)\r\n      .then((response) => {})\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-main-div\">\r\n      <div id=\"wrapper\">\r\n        <div className=\"form-container\">\r\n          <p id=\"form-title\">Add your memory here</p>\r\n          <form className=\"inputs-container\" onSubmit={handleSubmit(onSubmit)}>\r\n            <label for=\"Password\" class=\"labels\">\r\n              IMG:\r\n            </label>\r\n            <input\r\n              placeholder=\"Paste your image adress here!\"\r\n              className=\"input-design\"\r\n              id=\"img\"\r\n              name=\"img\"\r\n              ref={register}\r\n            />\r\n\r\n            <label for=\"Password\" class=\"labels\">\r\n              Title:\r\n            </label>\r\n            <input\r\n              placeholder=\"Header\"\r\n              className=\"input-design\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              ref={register}\r\n            />\r\n\r\n            <label for=\"Password\" class=\"labels\">\r\n              Date:\r\n            </label>\r\n            <input\r\n              placeholder=\"Date\"\r\n              className=\"input-design\"\r\n              id=\"date\"\r\n              type=\"text\"\r\n              name=\"date\"\r\n              ref={register}\r\n            />\r\n            {/*         BUTTON!!!         */}\r\n            <button id=\"Submit\" type=\"submit\">\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"card-list-container\">\r\n          {memoryFromContext.memories.map((passing) => {\r\n            return (\r\n              <ul>\r\n                <li>\r\n                  <MemoryCard\r\n                    id={passing.title}\r\n                    img={passing.img}\r\n                    title={passing.title}\r\n                    date={passing.date}\r\n                  />\r\n                </li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryForm;\r\n","D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\Api\\api.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\React-Completed-Projects\\Memories-App\\memories-frontend\\src\\components\\MemoryCardDesign\\MemoryCard.js",["71","72"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Memory } from \"../Context/MemoryContext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport './MemoryCardStyle.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 265,\r\n    width: 240 ,\r\n    backgroundColor:'#E4E4E4' ,\r\n    \r\n  },\r\n  media: {\r\n    height: 200,\r\n    marginBottom: 20\r\n\r\n  },\r\n});\r\n\r\nconst MemoryCard = ({ id, img, title, date }) => {\r\n\r\n  const { removeQuestion } = useContext(Memory);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"CARD-MAIN-DIV\">\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={img}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h3\" className=\"typographyTitle\">\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body4\" color=\"textSecondary\" component=\"p\"  className=\"typographyDate\">\r\n              {date}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button style={{marginLeft: '30%'}}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            // color=\"primary\"\r\n            onClick={() => removeQuestion(id)}\r\n            id=\"deletebtn\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryCard;\r\n","D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\index.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\App.js",["73"],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\MainHeader\\MainHeader.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\CreateMemory\\MemoryForm.js",["74"],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\Context\\MemoryContext.js",["75"],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\Api\\api.js",[],"D:\\מתן\\Web Development Bootcamp\\React Playground\\Working On Projects\\Memories-App UPDATE\\memories-frontend\\src\\components\\MemoryCardDesign\\MemoryCard.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"85","line":21,"column":9,"nodeType":"82","messageId":"83","endLine":21,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":34,"column":28,"nodeType":"88","messageId":"89","endLine":34,"endColumn":30},{"ruleId":"86","severity":1,"message":"87","line":35,"column":30,"nodeType":"88","messageId":"89","endLine":35,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":36,"column":35,"nodeType":"88","messageId":"89","endLine":36,"endColumn":37},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"90","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"91","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":25,"column":9,"nodeType":"82","messageId":"83","endLine":25,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":36,"column":13,"nodeType":"94","endLine":38,"endColumn":4},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useContext' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]